#!/usr/bin/python
import socket
import sys
import ssl

if len(sys.argv) == 6:
    nuid = sys.argv[5]
    hostname = sys.argv[4]
    port = int(sys.argv[2])
    ssl_flag = True
elif len(sys.argv) == 5:
    nuid = sys.argv[4]
    hostname = sys.argv[3]
    port = int(sys.argv[2])
    ssl_flag = False
elif len(sys.argv) == 4:
    nuid = sys.argv[3]
    hostname = sys.argv[2]
    port = 27994
    ssl_flag = True
elif len(sys.argv) == 3:
    nuid = sys.argv[2]
    hostname = sys.argv[1]
    port = 27993
    ssl_flag = False
else:
    print "error0"

def get_solution(msg_recv):
    recv = msg_recv.split(' ')
    data1 = int(recv[2])
    operator = recv[3]
    data2 = int(recv[4])
    if (operator == '+'):
        return data1 + data2
    elif (operator == '-'):
        return data1 - data2
    elif (operator == '*'):
        return data1 * data2
    elif (operator == '/'):
        return data1 / data2
    
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
hellomsg = 'cs5700fall2016 HELLO ' + str(nuid) + '\n'

def check_status(msg_recv):
    msg = msg_recv.split()
    if len(msg) != 5:
        return False
    if msg[0] != 'cs5700fall2016':
        return False
    if msg[1] != 'STATUS':
        return False
    if msg[3] != '-' and msg[3] != '*' and msg[3] != '/' and msg[3] != '+':
        return False
    for i in msg[2]:
        if ord(i) > 57 or ord(i) < 48:
            return False
    for i in msg[4]:
        if ord(i) > 57 or ord(i) < 48:
            return False
    return True

def check_result(msg_recv):
    msg = msg_recv.split()
    if len(msg) != 3:
        return False
    if msg[0] != 'cs5700fall2016':
        return False
    if len(msg[1]) != 64:
        return False
    if msg[2] != "BYE":
        return False
    return True

def normal_socket():
    s.connect((hostname, port))
    s.send(hellomsg)
    msg_recv = s.recv(256)
    if check_status(msg_recv):
        while not check_result(msg_recv):
            solution = get_solution(msg_recv)
            solution_msg = "cs5700fall2016 " + str(solution) + "\n"
            s.send(solution_msg)
            msg_recv = s.recv(256)
            if not check_status(msg_recv) and not check_result(msg_recv):
                print "error1"
                break
                s.close()
                sys.exit()
        return msg_recv
    elif check_result(msg_recv):
        return msg_recv
    else:
        print "error2"
        s.close()
        sys.exit()

def ssl_socket():
    simple_ssl = ssl.wrap_socket(s, cert_reqs = ssl.CERT_NONE)
    simple_ssl.connect((hostname,port))
    simple_ssl.write(hellomsg)
    msg_recv = simple_ssl.read()
    if check_status(msg_recv):
        while not check_result(msg_recv):
            solution = get_solution(msg_recv)
            solution_msg = "cs5700fall2016 " + str(solution) + "\n"
            simple_ssl.write(solution_msg)        
            msg_recv = simple_ssl.recv(256)
            if not check_status(msg_recv) and not check_result(msg_recv):
                print "error3"
                break
                s.close()
                sys.exit()      
        return msg_recv
    elif check_result(msg_recv):
        return msg_recv
    else:
        print "error4"
        s.close()
        sys.exit()

if ssl_flag:
    print ssl_socket()
else:
    print normal_socket()
